apiVersion: core.oam.dev/v1alpha1
kind: Definition
metadata:
  name: trigger-action-bump-application-revision
  namespace: vela-system
spec:
  type: trigger-action
  templates:
    main.cue: |
      import (
        "vela/kube"
        "strconv"
      )

      items: *[] | [{...}]

      if parameter.nameSelector != _|_ if parameter.nameSelector.matchingLabels != _|_ {
        list: kube.#List & {
          $params: {
            resource: {
              apiVersion: "core.oam.dev/v1beta1"
              kind:       "Application"
            }
            filter: {
              namespace: parameter.namespace
              if parameter.nameSelector.matchingLabels != _|_ {
                matchingLabels: parameter.nameSelector.matchingLabels
              }
            }
          }
        }
        items: list.$returns.items
      }

      if parameter.nameSelector != _|_ if parameter.nameSelector.fromLabel != _|_ {
        get: kube.#Get & {
          $params: {
            resource: {
              apiVersion: "core.oam.dev/v1beta1"
              kind:       "Application"
              metadata: {
                name:      context.data.metadata.labels[parameter.nameSelector.fromLabel]
                namespace: parameter.namespace
              }
            }
          }
        }
        items: [{get.$returns}]
      }

      if parameter.nameSelector == _|_ {
        get: kube.#Get & {
          $params: {
            resource: {
              apiVersion: "core.oam.dev/v1beta1"
              kind:       "Application"
              metadata: {
                name:      context.data.metadata.name
                namespace: parameter.namespace
              }
            }
          }
        }
        items: [{get.$returns}]
      }

      for index, item in items {
        if item.metadata.annotations["app.oam.dev/publishVersion"] != _|_ {
          if strconv.ParseInt(item.metadata.annotations["app.oam.dev/publishVersion"], 10, 64) != _|_ {
            "patch-\(index)": kube.#Patch & {
              $params: {
                resource: {
                  apiVersion: "core.oam.dev/v1beta1"
                  kind:       "Application"
                  metadata: {
                    name:      item.metadata.name
                    namespace: item.metadata.namespace
                  }
                }
                patch: {
                  type: "merge"
                  data: {
                    metadata: {
                      annotations: {
                        "app.oam.dev/publishVersion": strconv.FormatInt(strconv.ParseInt(item.metadata.annotations["app.oam.dev/publishVersion"], 10, 64)+1, 10)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      parameter: {
        // +usage=The namespace to list the resources
        namespace: *context.data.metadata.namespace | string
        // +usage=The name selector to select the app to bump revision
        nameSelector?: close({
          fromLabel?: string
        }) | close({
          // +usage=The label selector to filter the resources
          matchingLabels?: {...}
        })
      }
